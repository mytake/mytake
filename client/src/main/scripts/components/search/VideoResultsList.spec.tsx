/*
 * MyTake.org website and tooling.
 * Copyright (C) 2020 MyTake.org, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * You can contact us at team@mytake.org
 */
import * as React from "react";
import * as renderer from "react-test-renderer";
import { VideoResultsList } from "./VideoResultsList";
import videoFactHashMap from "./testData/videoFactHashMap.json";
import { VideoFactHashMap } from "../../utils/databaseAPI";
import { Search } from "../../java2ts/Search";
import {
  SearchDatabaseApi,
  createHashMap,
  processFacts,
} from "./database/SearchDatabaseApi";
import { SearchDatabase } from "./database/SearchDatabase";

// this data is generated by server/src/test/java/controllers/LucenePlayground.java
import socialSecuritySearchResults from "./testData/socialSecuritySearchResults.json";

const searchDatabaseApi = SearchDatabaseApi.getInstance("mockDb");

test("VideoResultsList social security", () => {
  const factTurns = processFacts(
    createHashMap(socialSecuritySearchResults as Search.FactResultList)!,
    (videoFactHashMap as unknown) as VideoFactHashMap[]
  );
  Object.defineProperty(searchDatabaseApi, "searchDatabase", {
    get: jest.fn(() => {
      return new SearchDatabase(factTurns, "social security");
    }),
    configurable: true,
  });
  const tree = renderer.create(new VideoResultsList({}).render()).toJSON();
  expect(tree).toMatchSnapshot();
});

test("VideoResultsList no results", () => {
  Object.defineProperty(searchDatabaseApi, "searchDatabase", {
    get: jest.fn(() => {
      return new SearchDatabase([], "gibberish");
    }),
    configurable: true,
  });
  const tree = renderer.create(new VideoResultsList({}).render()).toJSON();
  expect(tree).toMatchSnapshot();
});
