plugins { id 'com.diffplug.eclipse.apt' }

import com.diffplug.common.swt.os.OS

apply plugin: 'java'
if (OS.getNative().isWindows()) {
	apply plugin: 'com.diffplug.p2.asmaven'
	String VER_CEF = '0.4.0.201908130254'
	String VER_CHROMIUM = '0.10.2.201908130308'
	p2AsMaven {
		group 'chromium-swt', {
			repo 'http://dl.maketechnology.io/chromium-swt/rls/repository'
			repo 'http://dl.maketechnology.io/chromium-cef/rls/repository'
			iu "com.make.chromium.cef.win32.win32.x86_64", VER_CEF
			iu "org.eclipse.swt.chromium", VER_CHROMIUM
			iu "org.eclipse.swt.chromium.win32.win32.x86_64", VER_CHROMIUM
		}
	}
	sourceSets.test.java.srcDirs = [
		'src/test/java',
		'src/test/java-win-only'
	]
}

String VER_AUTOVALUE = '1.7.2'
dependencies {
	annotationProcessor     "com.google.auto.value:auto-value:${VER_AUTOVALUE}"
	implementation          "com.google.auto.value:auto-value-annotations:${VER_AUTOVALUE}"
	testAnnotationProcessor "com.google.auto.value:auto-value:${VER_AUTOVALUE}"
	testImplementation      "com.google.auto.value:auto-value-annotations:${VER_AUTOVALUE}"

	compileOnly "com.google.code.findbugs:jsr305:$VER_JSR_305"
	implementation project(':client')
	implementation project(':lucene')
	implementation "com.jsoniter:jsoniter:$VER_JSONITER"
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'org.jsoup:jsoup:1.13.1'
	implementation 'org.eclipse.jgit:org.eclipse.jgit:5.0.1.201806211838-r'
	implementation 'com.diffplug.durian:durian-core:1.2.0'
	implementation 'com.diffplug.durian:durian-collect:1.2.0'
	implementation 'com.diffplug.durian:durian-io:1.2.0'

	if (OS.getNative().isWindows()) {
		implementation 'chromium-swt:org.eclipse.swt.chromium:+'
		implementation 'chromium-swt:org.eclipse.swt.chromium.win32.win32.x86_64:+'
		implementation 'chromium-swt:com.make.chromium.cef.win32.win32.x86_64:+'
	}

	testImplementation "junit:junit:$VER_JUNIT"
	testImplementation "org.assertj:assertj-core:$VER_ASSERTJ"
	testImplementation 'com.diffplug.durian:durian-swt:3.1.0'
	testImplementation 'com.diffplug.durian:durian-rx:3.0.0'
	testImplementation 'io.reactivex.rxjava2:rxjava:2.2.7'
}

apply plugin: 'com.diffplug.eclipse.mavencentral'
eclipseMavenCentral {
	release '4.15.0', {
		testImplementation 'org.eclipse.swt'
		testImplementation 'org.eclipse.jface'
		testImplementation 'org.eclipse.jface.text'
		useNativesForRunningPlatform()
	}
}

eclipse {
	project {
		referencedProjects = [
			'mytake-client'
		]
	}
}

tasks.register('generateFoundation', JavaExec) {
	description = 'Generates the foundation'
	classpath = sourceSets.main.runtimeClasspath
	main = 'org.mytake.foundation.Index'

	dependsOn(tasks.classes)
	inputs.dir('../presidential-debates').withPathSensitivity(PathSensitivity.NAME_ONLY)
	outputs.dir('../foundation/src/main/resources')
	outputs.cacheIf { true }
}

apply plugin: 'com.diffplug.spotless'
spotless {
	ratchetFrom 'origin/master'
	java {
		licenseHeaderFile rootProject.file('gradle/spotless-license-epl.java')
		importOrder()
		eclipse().configFile(rootProject.file('gradle/spotless.eclipseformat.xml'))
		removeUnusedImports()
	}
	format 'foundation', {
		target 'src/main/resources/**'
		replace('Always use simple apostrophe', "’", "'")
		replace('Always use simple right quote', '”', '"')
		replace('Always use simple left quote', '“', '"')
	}
}

task transcriptGui(type: JavaExec, dependsOn: testClasses) {
	description = 'Runs the transcript GUI'
	classpath = sourceSets.test.runtimeClasspath
	main = 'org.mytake.foundation.transcript.gui.TranscriptFolderDialog'
	if (com.diffplug.common.swt.os.OS.getNative().isMac()) {
		jvmArgs = [
			'-XstartOnFirstThread'
		]
	}
}
