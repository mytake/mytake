/*
 * This file is generated by jOOQ.
*/
package db;


import db.tables.Account;
import db.tables.Confirmaccountlink;
import db.tables.FlywaySchemaHistory;
import db.tables.Follow;
import db.tables.FoundationRev;
import db.tables.Loginlink;
import db.tables.Moderator;
import db.tables.SharedFacts;
import db.tables.SharedUrlRev;
import db.tables.Takedraft;
import db.tables.Takepublished;
import db.tables.Takereaction;
import db.tables.Takerevision;
import db.tables.records.AccountRecord;
import db.tables.records.ConfirmaccountlinkRecord;
import db.tables.records.FlywaySchemaHistoryRecord;
import db.tables.records.FollowRecord;
import db.tables.records.FoundationRevRecord;
import db.tables.records.LoginlinkRecord;
import db.tables.records.ModeratorRecord;
import db.tables.records.SharedFactsRecord;
import db.tables.records.SharedUrlRevRecord;
import db.tables.records.TakedraftRecord;
import db.tables.records.TakepublishedRecord;
import db.tables.records.TakereactionRecord;
import db.tables.records.TakerevisionRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountRecord, Integer> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
    public static final Identity<TakedraftRecord, Integer> IDENTITY_TAKEDRAFT = Identities0.IDENTITY_TAKEDRAFT;
    public static final Identity<TakepublishedRecord, Integer> IDENTITY_TAKEPUBLISHED = Identities0.IDENTITY_TAKEPUBLISHED;
    public static final Identity<TakerevisionRecord, Integer> IDENTITY_TAKEREVISION = Identities0.IDENTITY_TAKEREVISION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = UniqueKeys0.ACCOUNT_PKEY;
    public static final UniqueKey<AccountRecord> ACCOUNT_USERNAME_KEY = UniqueKeys0.ACCOUNT_USERNAME_KEY;
    public static final UniqueKey<AccountRecord> ACCOUNT_EMAIL_KEY = UniqueKeys0.ACCOUNT_EMAIL_KEY;
    public static final UniqueKey<ConfirmaccountlinkRecord> CONFIRMACCOUNTLINK_PKEY = UniqueKeys0.CONFIRMACCOUNTLINK_PKEY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<FollowRecord> FOLLOW_PKEY = UniqueKeys0.FOLLOW_PKEY;
    public static final UniqueKey<FoundationRevRecord> FOUNDATION_REV_PKEY = UniqueKeys0.FOUNDATION_REV_PKEY;
    public static final UniqueKey<LoginlinkRecord> LOGINLINK_PKEY = UniqueKeys0.LOGINLINK_PKEY;
    public static final UniqueKey<ModeratorRecord> MODERATOR_PKEY = UniqueKeys0.MODERATOR_PKEY;
    public static final UniqueKey<SharedUrlRevRecord> SHARED_URL_REV_PKEY = UniqueKeys0.SHARED_URL_REV_PKEY;
    public static final UniqueKey<TakedraftRecord> TAKEDRAFT_PKEY = UniqueKeys0.TAKEDRAFT_PKEY;
    public static final UniqueKey<TakepublishedRecord> TAKEPUBLISHED_PKEY = UniqueKeys0.TAKEPUBLISHED_PKEY;
    public static final UniqueKey<TakereactionRecord> TAKEREACTION_PKEY = UniqueKeys0.TAKEREACTION_PKEY;
    public static final UniqueKey<TakerevisionRecord> TAKEREVISION_PKEY = UniqueKeys0.TAKEREVISION_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<FollowRecord, AccountRecord> FOLLOW__FOLLOW_AUTHOR_FKEY = ForeignKeys0.FOLLOW__FOLLOW_AUTHOR_FKEY;
    public static final ForeignKey<FollowRecord, AccountRecord> FOLLOW__FOLLOW_FOLLOWER_FKEY = ForeignKeys0.FOLLOW__FOLLOW_FOLLOWER_FKEY;
    public static final ForeignKey<LoginlinkRecord, AccountRecord> LOGINLINK__LOGINLINK_ACCOUNT_ID_FKEY = ForeignKeys0.LOGINLINK__LOGINLINK_ACCOUNT_ID_FKEY;
    public static final ForeignKey<SharedFactsRecord, AccountRecord> SHARED_FACTS__SHARED_FACTS_SHARED_BY_FKEY = ForeignKeys0.SHARED_FACTS__SHARED_FACTS_SHARED_BY_FKEY;
    public static final ForeignKey<SharedFactsRecord, SharedUrlRevRecord> SHARED_FACTS__SHARED_FACTS_URL_VERSION_FKEY = ForeignKeys0.SHARED_FACTS__SHARED_FACTS_URL_VERSION_FKEY;
    public static final ForeignKey<TakedraftRecord, AccountRecord> TAKEDRAFT__TAKEDRAFT_USER_ID_FKEY = ForeignKeys0.TAKEDRAFT__TAKEDRAFT_USER_ID_FKEY;
    public static final ForeignKey<TakedraftRecord, TakerevisionRecord> TAKEDRAFT__TAKEDRAFT_LAST_REVISION_FKEY = ForeignKeys0.TAKEDRAFT__TAKEDRAFT_LAST_REVISION_FKEY;
    public static final ForeignKey<TakepublishedRecord, AccountRecord> TAKEPUBLISHED__TAKEPUBLISHED_USER_ID_FKEY = ForeignKeys0.TAKEPUBLISHED__TAKEPUBLISHED_USER_ID_FKEY;
    public static final ForeignKey<TakereactionRecord, TakepublishedRecord> TAKEREACTION__TAKEREACTION_TAKE_ID_FKEY = ForeignKeys0.TAKEREACTION__TAKEREACTION_TAKE_ID_FKEY;
    public static final ForeignKey<TakereactionRecord, AccountRecord> TAKEREACTION__TAKEREACTION_USER_ID_FKEY = ForeignKeys0.TAKEREACTION__TAKEREACTION_USER_ID_FKEY;
    public static final ForeignKey<TakerevisionRecord, TakerevisionRecord> TAKEREVISION__TAKEREVISION_PARENT_ID_FKEY = ForeignKeys0.TAKEREVISION__TAKEREVISION_PARENT_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AccountRecord, Integer> IDENTITY_ACCOUNT = createIdentity(Account.ACCOUNT, Account.ACCOUNT.ID);
        public static Identity<TakedraftRecord, Integer> IDENTITY_TAKEDRAFT = createIdentity(Takedraft.TAKEDRAFT, Takedraft.TAKEDRAFT.ID);
        public static Identity<TakepublishedRecord, Integer> IDENTITY_TAKEPUBLISHED = createIdentity(Takepublished.TAKEPUBLISHED, Takepublished.TAKEPUBLISHED.ID);
        public static Identity<TakerevisionRecord, Integer> IDENTITY_TAKEREVISION = createIdentity(Takerevision.TAKEREVISION, Takerevision.TAKEREVISION.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = createUniqueKey(Account.ACCOUNT, "account_pkey", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountRecord> ACCOUNT_USERNAME_KEY = createUniqueKey(Account.ACCOUNT, "account_username_key", Account.ACCOUNT.USERNAME);
        public static final UniqueKey<AccountRecord> ACCOUNT_EMAIL_KEY = createUniqueKey(Account.ACCOUNT, "account_email_key", Account.ACCOUNT.EMAIL);
        public static final UniqueKey<ConfirmaccountlinkRecord> CONFIRMACCOUNTLINK_PKEY = createUniqueKey(Confirmaccountlink.CONFIRMACCOUNTLINK, "confirmaccountlink_pkey", Confirmaccountlink.CONFIRMACCOUNTLINK.CODE);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<FollowRecord> FOLLOW_PKEY = createUniqueKey(Follow.FOLLOW, "follow_pkey", Follow.FOLLOW.AUTHOR, Follow.FOLLOW.FOLLOWER);
        public static final UniqueKey<FoundationRevRecord> FOUNDATION_REV_PKEY = createUniqueKey(FoundationRev.FOUNDATION_REV, "foundation_rev_pkey", FoundationRev.FOUNDATION_REV.VERSION);
        public static final UniqueKey<LoginlinkRecord> LOGINLINK_PKEY = createUniqueKey(Loginlink.LOGINLINK, "loginlink_pkey", Loginlink.LOGINLINK.CODE);
        public static final UniqueKey<ModeratorRecord> MODERATOR_PKEY = createUniqueKey(Moderator.MODERATOR, "moderator_pkey", Moderator.MODERATOR.ID);
        public static final UniqueKey<SharedUrlRevRecord> SHARED_URL_REV_PKEY = createUniqueKey(SharedUrlRev.SHARED_URL_REV, "shared_url_rev_pkey", SharedUrlRev.SHARED_URL_REV.VERSION);
        public static final UniqueKey<TakedraftRecord> TAKEDRAFT_PKEY = createUniqueKey(Takedraft.TAKEDRAFT, "takedraft_pkey", Takedraft.TAKEDRAFT.ID);
        public static final UniqueKey<TakepublishedRecord> TAKEPUBLISHED_PKEY = createUniqueKey(Takepublished.TAKEPUBLISHED, "takepublished_pkey", Takepublished.TAKEPUBLISHED.ID);
        public static final UniqueKey<TakereactionRecord> TAKEREACTION_PKEY = createUniqueKey(Takereaction.TAKEREACTION, "takereaction_pkey", Takereaction.TAKEREACTION.TAKE_ID, Takereaction.TAKEREACTION.USER_ID, Takereaction.TAKEREACTION.KIND);
        public static final UniqueKey<TakerevisionRecord> TAKEREVISION_PKEY = createUniqueKey(Takerevision.TAKEREVISION, "takerevision_pkey", Takerevision.TAKEREVISION.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<FollowRecord, AccountRecord> FOLLOW__FOLLOW_AUTHOR_FKEY = createForeignKey(db.Keys.ACCOUNT_PKEY, Follow.FOLLOW, "follow__follow_author_fkey", Follow.FOLLOW.AUTHOR);
        public static final ForeignKey<FollowRecord, AccountRecord> FOLLOW__FOLLOW_FOLLOWER_FKEY = createForeignKey(db.Keys.ACCOUNT_PKEY, Follow.FOLLOW, "follow__follow_follower_fkey", Follow.FOLLOW.FOLLOWER);
        public static final ForeignKey<LoginlinkRecord, AccountRecord> LOGINLINK__LOGINLINK_ACCOUNT_ID_FKEY = createForeignKey(db.Keys.ACCOUNT_PKEY, Loginlink.LOGINLINK, "loginlink__loginlink_account_id_fkey", Loginlink.LOGINLINK.ACCOUNT_ID);
        public static final ForeignKey<SharedFactsRecord, AccountRecord> SHARED_FACTS__SHARED_FACTS_SHARED_BY_FKEY = createForeignKey(db.Keys.ACCOUNT_PKEY, SharedFacts.SHARED_FACTS, "shared_facts__shared_facts_shared_by_fkey", SharedFacts.SHARED_FACTS.SHARED_BY);
        public static final ForeignKey<SharedFactsRecord, SharedUrlRevRecord> SHARED_FACTS__SHARED_FACTS_URL_VERSION_FKEY = createForeignKey(db.Keys.SHARED_URL_REV_PKEY, SharedFacts.SHARED_FACTS, "shared_facts__shared_facts_url_version_fkey", SharedFacts.SHARED_FACTS.URL_VERSION);
        public static final ForeignKey<TakedraftRecord, AccountRecord> TAKEDRAFT__TAKEDRAFT_USER_ID_FKEY = createForeignKey(db.Keys.ACCOUNT_PKEY, Takedraft.TAKEDRAFT, "takedraft__takedraft_user_id_fkey", Takedraft.TAKEDRAFT.USER_ID);
        public static final ForeignKey<TakedraftRecord, TakerevisionRecord> TAKEDRAFT__TAKEDRAFT_LAST_REVISION_FKEY = createForeignKey(db.Keys.TAKEREVISION_PKEY, Takedraft.TAKEDRAFT, "takedraft__takedraft_last_revision_fkey", Takedraft.TAKEDRAFT.LAST_REVISION);
        public static final ForeignKey<TakepublishedRecord, AccountRecord> TAKEPUBLISHED__TAKEPUBLISHED_USER_ID_FKEY = createForeignKey(db.Keys.ACCOUNT_PKEY, Takepublished.TAKEPUBLISHED, "takepublished__takepublished_user_id_fkey", Takepublished.TAKEPUBLISHED.USER_ID);
        public static final ForeignKey<TakereactionRecord, TakepublishedRecord> TAKEREACTION__TAKEREACTION_TAKE_ID_FKEY = createForeignKey(db.Keys.TAKEPUBLISHED_PKEY, Takereaction.TAKEREACTION, "takereaction__takereaction_take_id_fkey", Takereaction.TAKEREACTION.TAKE_ID);
        public static final ForeignKey<TakereactionRecord, AccountRecord> TAKEREACTION__TAKEREACTION_USER_ID_FKEY = createForeignKey(db.Keys.ACCOUNT_PKEY, Takereaction.TAKEREACTION, "takereaction__takereaction_user_id_fkey", Takereaction.TAKEREACTION.USER_ID);
        public static final ForeignKey<TakerevisionRecord, TakerevisionRecord> TAKEREVISION__TAKEREVISION_PARENT_ID_FKEY = createForeignKey(db.Keys.TAKEREVISION_PKEY, Takerevision.TAKEREVISION, "takerevision__takerevision_parent_id_fkey", Takerevision.TAKEREVISION.PARENT_ID);
    }
}
