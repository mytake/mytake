/*
 * This file is generated by jOOQ.
 */
package db.tables;


import db.Keys;
import db.Public;
import db.bindings.PostgresInetBinding;
import db.tables.records.LoginlinkRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Loginlink extends TableImpl<LoginlinkRecord> {

    private static final long serialVersionUID = 1624401786;

    /**
     * The reference instance of <code>public.loginlink</code>
     */
    public static final Loginlink LOGINLINK = new Loginlink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LoginlinkRecord> getRecordType() {
        return LoginlinkRecord.class;
    }

    /**
     * The column <code>public.loginlink.code</code>.
     */
    public final TableField<LoginlinkRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.CHAR(44).nullable(false), this, "");

    /**
     * The column <code>public.loginlink.created_at</code>.
     */
    public final TableField<LoginlinkRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.loginlink.expires_at</code>.
     */
    public final TableField<LoginlinkRecord, LocalDateTime> EXPIRES_AT = createField(DSL.name("expires_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.loginlink.requestor_ip</code>.
     */
    public final TableField<LoginlinkRecord, String> REQUESTOR_IP = createField(DSL.name("requestor_ip"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"inet\"").nullable(false), this, "", new PostgresInetBinding());

    /**
     * The column <code>public.loginlink.account_id</code>.
     */
    public final TableField<LoginlinkRecord, Integer> ACCOUNT_ID = createField(DSL.name("account_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.loginlink</code> table reference
     */
    public Loginlink() {
        this(DSL.name("loginlink"), null);
    }

    /**
     * Create an aliased <code>public.loginlink</code> table reference
     */
    public Loginlink(String alias) {
        this(DSL.name(alias), LOGINLINK);
    }

    /**
     * Create an aliased <code>public.loginlink</code> table reference
     */
    public Loginlink(Name alias) {
        this(alias, LOGINLINK);
    }

    private Loginlink(Name alias, Table<LoginlinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private Loginlink(Name alias, Table<LoginlinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Loginlink(Table<O> child, ForeignKey<O, LoginlinkRecord> key) {
        super(child, key, LOGINLINK);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<LoginlinkRecord> getPrimaryKey() {
        return Keys.LOGINLINK_PKEY;
    }

    @Override
    public List<UniqueKey<LoginlinkRecord>> getKeys() {
        return Arrays.<UniqueKey<LoginlinkRecord>>asList(Keys.LOGINLINK_PKEY);
    }

    @Override
    public List<ForeignKey<LoginlinkRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LoginlinkRecord, ?>>asList(Keys.LOGINLINK__LOGINLINK_ACCOUNT_ID_FKEY);
    }

    public Account account() {
        return new Account(this, Keys.LOGINLINK__LOGINLINK_ACCOUNT_ID_FKEY);
    }

    @Override
    public Loginlink as(String alias) {
        return new Loginlink(DSL.name(alias), this);
    }

    @Override
    public Loginlink as(Name alias) {
        return new Loginlink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Loginlink rename(String name) {
        return new Loginlink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Loginlink rename(Name name) {
        return new Loginlink(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, LocalDateTime, LocalDateTime, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
