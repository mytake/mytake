/*
 * This file is generated by jOOQ.
 */
package db.tables.records;


import db.tables.BookmarksLastChange;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookmarksLastChangeRecord extends UpdatableRecordImpl<BookmarksLastChangeRecord> implements Record2<Integer, LocalDateTime> {

    private static final long serialVersionUID = 784969023;

    /**
     * Setter for <code>public.bookmarks_last_change.saved_by</code>.
     */
    public BookmarksLastChangeRecord setSavedBy(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.bookmarks_last_change.saved_by</code>.
     */
    public Integer getSavedBy() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.bookmarks_last_change.last_change</code>.
     */
    public BookmarksLastChangeRecord setLastChange(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.bookmarks_last_change.last_change</code>.
     */
    public LocalDateTime getLastChange() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, LocalDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, LocalDateTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return BookmarksLastChange.BOOKMARKS_LAST_CHANGE.SAVED_BY;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return BookmarksLastChange.BOOKMARKS_LAST_CHANGE.LAST_CHANGE;
    }

    @Override
    public Integer component1() {
        return getSavedBy();
    }

    @Override
    public LocalDateTime component2() {
        return getLastChange();
    }

    @Override
    public Integer value1() {
        return getSavedBy();
    }

    @Override
    public LocalDateTime value2() {
        return getLastChange();
    }

    @Override
    public BookmarksLastChangeRecord value1(Integer value) {
        setSavedBy(value);
        return this;
    }

    @Override
    public BookmarksLastChangeRecord value2(LocalDateTime value) {
        setLastChange(value);
        return this;
    }

    @Override
    public BookmarksLastChangeRecord values(Integer value1, LocalDateTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookmarksLastChangeRecord
     */
    public BookmarksLastChangeRecord() {
        super(BookmarksLastChange.BOOKMARKS_LAST_CHANGE);
    }

    /**
     * Create a detached, initialised BookmarksLastChangeRecord
     */
    public BookmarksLastChangeRecord(Integer savedBy, LocalDateTime lastChange) {
        super(BookmarksLastChange.BOOKMARKS_LAST_CHANGE);

        set(0, savedBy);
        set(1, lastChange);
    }
}
